version: 2.1

orbs:
  aws-cli: circleci/aws-cli@5.1.1

jobs:
  test-oidc:
    docker:
      - image: cimg/base:stable

    steps:
      - checkout

      - run:
          name: üîß Environment info
          command: |
            echo "ORG ID:      $CIRCLE_ORGANIZATION_ID"
            echo "PROJECT ID:  $CIRCLE_PROJECT_ID"
            echo "USER:        $CIRCLE_USERNAME"
            echo "BRANCH:      $CIRCLE_BRANCH"
            echo "--------------------------------------"

      # 1Ô∏è‚É£ Fetch token from environment variables (CircleCI provides it automatically)
      - run:
          name: üîë Find CircleCI OIDC token
          command: |
            set -e
            echo "üîç Checking for OIDC token..."

            if [ -n "$CIRCLE_OIDC_TOKEN_V2" ]; then
              echo "‚úÖ Found CIRCLE_OIDC_TOKEN_V2"
              TOKEN="$CIRCLE_OIDC_TOKEN_V2"
            elif [ -n "$CIRCLE_OIDC_TOKEN_FILE" ]; then
              echo "‚úÖ Found CIRCLE_OIDC_TOKEN_FILE"
              TOKEN=$(cat "$CIRCLE_OIDC_TOKEN_FILE")
            elif [ -n "$CIRCLE_OIDC_TOKEN" ]; then
              echo "‚úÖ Found legacy CIRCLE_OIDC_TOKEN"
              TOKEN="$CIRCLE_OIDC_TOKEN"
            else
              echo "‚ùå No OIDC token found. Make sure your context has OIDC enabled."
              exit 1
            fi

            echo "$TOKEN" > token.jwt

      # 2Ô∏è‚É£ Decode and show key claims
      - run:
          name: üß† Decode OIDC token
          command: |
            echo "--------------------------------------"
            echo "üß† Decoding iss, aud, sub claims..."
            cat token.jwt | awk -F. '{print $2}' | base64 -d 2>/dev/null | jq '{iss, aud, sub}'
            echo "--------------------------------------"
            echo "üìú Full payload (for debug only):"
            cat token.jwt | awk -F. '{print $2}' | base64 -d 2>/dev/null | jq .
            echo "--------------------------------------"

      # 3Ô∏è‚É£ Test AWS role assumption manually
      - run:
          name: ‚öôÔ∏è Test AssumeRoleWithWebIdentity
          command: |
            echo "üîç Testing manual AWS STS AssumeRoleWithWebIdentity..."
            aws sts assume-role-with-web-identity \
              --role-arn arn:aws:iam::056198491146:role/CircleCIInfraRole \
              --role-session-name circleci-oidc-test \
              --web-identity-token file://token.jwt \
              --region ap-southeast-1 || {
                echo "‚ùå Failed to assume role. Check 'aud' or trust policy."
                exit 1
              }

workflows:
  verify-oidc:
    jobs:
      - test-oidc:
          context: my-oidc-enabled-context
