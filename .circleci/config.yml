version: 2.1

orbs:
  python: circleci/python@2.1.1
  aws-cli: circleci/aws-cli@5.1.1  # ‚úÖ Newer orb with OIDC support

jobs:
  deploy:
    docker:
      - image: cimg/python:3.11
    environment:
      AWS_REGION: ap-southeast-1
    parameters:
      env_name:
        type: string
    steps:
      - checkout
      - run:
          name: üîç Inspect CircleCI OIDC Token
          command: |
            echo "üîç Decoding CircleCI OIDC token..."
            
            # Pick token source
            if [ -n "$CIRCLE_OIDC_TOKEN_V2" ]; then
              TOKEN="$CIRCLE_OIDC_TOKEN_V2"
            elif [ -n "$CIRCLE_OIDC_TOKEN_FILE" ]; then
              TOKEN=$(cat "$CIRCLE_OIDC_TOKEN_FILE")
            else
              echo "‚ùå No OIDC token found."
              exit 1
            fi

            # Decode payload (Base64URL safe, ignore errors)
            echo "$TOKEN" | cut -d '.' -f2 | tr '_-' '/+' | base64 --decode --ignore-garbage 2>/dev/null | jq '{aud, sub, iss}' || true

            echo ""
            echo "üîç Listing AWS OIDC providers (for verification)..."
            aws iam list-open-id-connect-providers || {
              echo "‚ùå Failed to list OIDC providers. Ensure AWS CLI is configured or IAM permissions allow it."
              exit 1
            }
      # ‚úÖ Assume AWS OIDC Role using aws-cli/setup (official pattern)
      - aws-cli/setup:
          role_arn: "arn:aws:iam::${AWS_ACCOUNT_ID}:role/CircleCIInfraRole"
          region:  ${AWS_REGION}
          profile_name: "OIDC-PROFILE"
          role_session_name: "circleci-session"
          session_duration: "3600"

      - run:
          name: Verify AWS Identity
          command: aws sts get-caller-identity

      # üêç Setup Python & install dependencies
      - run:
          name: Setup Python & install CDK
          command: |
            cd cdk
            python -m venv .venv
            . .venv/bin/activate
            pip install -r requirements.txt
            pip install aws-cdk-lib constructs

      # üöÄ Deploy Stack
      - run:
          name: Bootstrap & deploy stack
          command: |
            cd cdk
            . .venv/bin/activate
            cdk bootstrap aws://$AWS_ACCOUNT_ID/$AWS_REGION
            cdk deploy \
              -c env=<< parameters.env_name >> \
              -c main_bucket_name=$MAIN_BUCKET_NAME \
              -c log_bucket_name=$LOG_BUCKET_NAME \
              -c instance_type=$INSTANCE_TYPE \
              -c nat_gateways=$NAT_GATEWAYS \
              --require-approval never

workflows:
  deploy_flow:
    jobs:
      - deploy:
          name: Deploy to Dev
          env_name: "dev"
          filters:
            branches:
              only: main

      - hold-for-approval:
          type: approval
          requires:
            - Deploy to Dev

      - deploy:
          name: Deploy to Prod
          env_name: "prod"
          requires:
            - hold-for-approval
          filters:
            branches:
              only: main
