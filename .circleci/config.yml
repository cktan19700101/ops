# .circleci/config.yml
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@5.1.1

jobs:
  test-oidc:
    docker:
      - image: cimg/base:stable  # Includes curl, jq, bash, base64, etc.

    steps:
      - checkout

      - run:
          name: üîß Preflight Environment Check
          command: |
            echo "‚úÖ CircleCI Environment:"
            echo "  ORG ID:      $CIRCLE_ORGANIZATION_ID"
            echo "  PROJECT ID:  $CIRCLE_PROJECT_ID"
            echo "  USER:        $CIRCLE_USERNAME"
            echo "  BRANCH:      $CIRCLE_BRANCH"
            echo "----------------------------------------"

      - aws-cli/setup:
          role_arn: "arn:aws:iam::056198491146:role/CircleCIInfraRole"
          role_session_name: "circleci-oidc-test"
          region: "ap-southeast-1"
          profile_name: "oidc-test"
          session_duration: "3600"

      - run:
          name: üîç Decode CircleCI OIDC Token
          command: |
            echo "üîç Looking for CircleCI OIDC token..."
            TOKEN=""

            if [ -n "$CIRCLE_OIDC_TOKEN_V2" ]; then
              echo "‚úÖ Found CIRCLE_OIDC_TOKEN_V2"
              TOKEN="$CIRCLE_OIDC_TOKEN_V2"
            elif [ -n "$CIRCLE_OIDC_TOKEN_FILE" ]; then
              echo "‚úÖ Found CIRCLE_OIDC_TOKEN_FILE"
              TOKEN=$(cat "$CIRCLE_OIDC_TOKEN_FILE")
            elif [ -n "$CIRCLE_OIDC_TOKEN" ]; then
              echo "‚úÖ Found legacy CIRCLE_OIDC_TOKEN"
              TOKEN="$CIRCLE_OIDC_TOKEN"
            else
              echo "‚ùå No OIDC token found in environment."
              exit 1
            fi

            echo "----------------------------------------"
            echo "üß† Decoding OIDC claims (iss, aud, sub):"
            echo "$TOKEN" | awk -F. '{print $2}' | base64 -d 2>/dev/null | jq '{iss, aud, sub}'
            echo "----------------------------------------"

      - run:
          name: üß† Verify AWS Identity
          command: |
            echo "üîç Calling STS get-caller-identity..."
            aws sts get-caller-identity --profile oidc-test || {
              echo "‚ùå Failed to assume role. Check trust policy & audience."
              exit 1
            }
            echo "‚úÖ Successfully assumed AWS role via OIDC!"

workflows:
  verify-oidc:
    jobs:
      - test-oidc
